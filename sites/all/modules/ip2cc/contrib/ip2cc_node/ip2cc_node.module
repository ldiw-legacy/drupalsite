<?php
// $Id: ip2cc_node.module,v 1.1.2.3 2009/09/27 12:19:55 mrfelton Exp $

/**
 * @file
 * Display author host information on nodes.
 *
 * @author Sugree Phatanapherom (http://www.howforge.com)
 * @author Tom Kirkpatrick (mrfelton), www.kirkdesigns.co.uk
 */

/**
 * Implementation of hook_perm
 */
function ip2cc_node_perm() {
  return array('view IP address', 'view country', 'view network name');
}

/**
 * Implementation of hook_help().
 */
function ip2cc_node_help($path, $arg) {
  switch ($path) {
    case 'admin/settings/ip2cc/node':
      $output = '<p>'. t("IP to Country Node allows you to hook into nodes and comments and display additional information about the poster, such as country code, country flag (icon), network name, and autonomous system number. The exact set of information that will be visible is determined by the modules <a href='@permissions_url'>permissions</a>", array('@permissions_url' => '/admin/user/permissions#module-ip2cc_node')) .'</p>';
      return $output;
  }
}

/**
 * Implementation of hook_menu().
 */
function ip2cc_node_menu() {
  $items = array();
  $items['admin/settings/ip2cc/node'] = array(
    'title' => 'Node settings',
    'description' => 'IP to Country node settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ip2cc_node_settings'),
    'access arguments' => array('administer ip2cc'),
    'type' => MENU_LOCAL_TASK,
  );
  return $items;
}

/**
 * IP to Country administration settings.
 *
 * @return
 *   Forms for ip2cc configuration options.
 */
function ip2cc_node_settings() {
  $form['ip2cc_placement'] = array(
    '#type' => 'fieldset',
    '#title' => t('Where to show the flag'),
  );
  $form['ip2cc_placement']['ip2cc_node_types'] = array(
    '#type' => 'select',
    '#title' => t('Node types to display flag for'),
    '#default_value' => variable_get('ip2cc_node_types', array()),
    '#options' => node_get_types('names'),
    '#multiple' => TRUE,
    '#description' => t('Flag will display on the node pages themselves (as dictated by the theme).<br/>To display flag on main feed pages, check the box below.'),
  );
  $form['ip2cc_placement']['ip2cc_node'] = array(
    '#type' => 'checkbox',
    '#title' => t('Display in node feeds (optional)'),
    '#return_value' => '1',
    '#default_value' => variable_get('ip2cc_node', 0),
  );
  $form['ip2cc_placement']['ip2cc_comment'] = array(
    '#type' => 'checkbox',
    '#title' => t('Display in comment feeds (optional)'),
    '#return_value' => '1',
    '#default_value' => variable_get('ip2cc_comment', 0),
  );
  return system_settings_form($form);
}

/**
 * Implementation of hook_theme().
 */
function ip2cc_node_theme() {
  return array(
    'ip2cc_flag' => array(
      'arguments' => array('co' => NULL, 'addr' => ''),
    ),
    'ip2cc_ip_flag' => array(
      'arguments' => array('addr' => NULL),
    ),
    'ip2cc_ip_flag_long' => array(
      'arguments' => array('addr' => NULL),
    ),
  );
}

/**
 * Implementation of hook_nodeapi().
 */
function ip2cc_node_nodeapi(&$node, $op, $teaser = NULL, $page = NULL) {
  switch ($op) {
    case 'load':
      $hostname = db_fetch_array(db_query("SELECT hostname FROM {ip2cc_node} WHERE nid = %d", $node->nid));
      return $hostname;
      break;
      
    case 'insert':
      db_query("INSERT INTO {ip2cc_node} (nid, hostname) VALUES (%d, '%s')", $node->nid, ip_address());
      break;

    case 'delete':
      db_query("DELETE FROM {ip2cc_node} WHERE nid = %d", $node->nid);
      break;
  }
}

/**
 * Implementation of hook_link().
 */
function ip2cc_node_link($type, $node = 0, $main = 0) {
  $links = array();
  $node_type = in_array($node->type, variable_get('ip2cc_node_types', array()), TRUE);
  if ($type == 'node' && variable_get('ip2cc_node', '0') == '1' && $node_type && isset($node->hostname) && !empty($node->hostname)) {
    if ($output = theme('ip2cc_ip_flag', $node->hostname)) {
      $links['ip2cc_info'] = array(
        'title' => $output,
        'html' => TRUE,
      );
    }
  }
  else if ($type == 'comment' && variable_get('ip2cc_comment', '0') == '1') {
    $hostname = db_result(db_query('SELECT c.hostname FROM {comments} c WHERE c.cid = %d', $node->cid));
    if ($output = theme('ip2cc_ip_flag', $hostname)) {
      $links['ip2cc_info'] = array(
        'title' => $output,
        'html' => TRUE,
      );
    }
  }
  return $links;
}

function theme_ip2cc_flag($country, $addr = '') {
  if (!user_access('view country')) {
    return "";
  }
  if (isset($country)) {
    $cc = strtolower($country->country_code2);
    if (empty($cc)) {
      $cc = "unknown";
    }
    $title = "$country->country_name";
    if (user_access('view IP address')) {
      $title .= " $country->ip";
    }
    if (user_access('view network name') && $country->net_name != 'Unknown') {
      $title .= " $country->net_name";
    }
  }
  else {
    $cc = 'unknown';
    $title = (empty($addr))? 'unknown' : $addr;
  }
  return theme('countryicons_icon', $cc, NULL, $cc, $title);
}

function theme_ip2cc_ip_flag($addr) {
  $country = module_invoke('ip2cc', 'get_country', $addr);
  if ($output = theme('ip2cc_flag', $country, $addr)) {
    $output = "<span>$output</span>";
  }
  return $output;
}

function theme_ip2cc_ip_flag_long($addr) {
  $country = module_invoke('ip2cc', 'get_country', $addr);
  if ($output = theme('ip2cc_flag', $country, $addr)) {
    $output = "<span>$output";
    if (user_access('view IP address')) {
      $output .= "$country->ip";
    }
    $output .= "</span>";
  }
  return $output;
}

